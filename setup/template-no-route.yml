AWSTemplateFormatVersion: '2010-09-09'
Parameters: 
    CodeBucket: 
        Type: String
    AwsSecretAccessKey: 
        Type: String
    AwsAccessKeyId: 
        Type: String
Resources:
    Files:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                -
                    AttributeName: "File"
                    AttributeType: "S"
                -
                    AttributeName: "WindowName"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "File"
                    KeyType: "HASH"
                -
                    AttributeName: "WindowName"
                    KeyType: "RANGE"
            ProvisionedThroughput:
                ReadCapacityUnits: "1"
                WriteCapacityUnits: "1"
    Windows:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                -
                    AttributeName: "WindowName"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "WindowName"
                    KeyType: "HASH"
            ProvisionedThroughput:
                ReadCapacityUnits: "1"
                WriteCapacityUnits: "1"
    Permissions:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                -
                    AttributeName: "Window"
                    AttributeType: "S"
                -
                    AttributeName: "User"
                    AttributeType: "S"
            KeySchema:
                -
                    AttributeName: "Window"
                    KeyType: "HASH"
                -
                    AttributeName: "User"
                    KeyType: "RANGE"
            ProvisionedThroughput:
                ReadCapacityUnits: "1"
                WriteCapacityUnits: "1"
    CognitoPool:
        Type: AWS::Cognito::UserPool
        Properties:
            AutoVerifiedAttributes:
                -
                    "email"
            EmailVerificationMessage: "Here is your code: {####} =)"
            EmailVerificationSubject: "Verify your E-Mail for VirtualDesktop"
            Policies:
                PasswordPolicy:
                    MinimumLength: "6"
                    RequireLowercase: false
                    RequireNumbers: false
                    RequireSymbols: false
                    RequireUppercase: false
    CognitoClient:   
        Type: AWS::Cognito::UserPoolClient
        Properties:
            GenerateSecret: false
            UserPoolId:
                Ref: CognitoPool
    ElasticBS:
        Type: AWS::ElasticBeanstalk::Application
        Properties:
            Description: ElasticBeanstalk VirtualDesktop
    ApplicationVersionElasticBS:
        Type: AWS::ElasticBeanstalk::ApplicationVersion
        Properties:
            ApplicationName:
                Ref: ElasticBS
            Description: ElasticBeanstalk VirtualDesktop Application Version
            SourceBundle:
                S3Bucket:
                    Ref: CodeBucket
                S3Key: ebs.zip
    ConfigurationElasticBS:
        Type: AWS::ElasticBeanstalk::ConfigurationTemplate
        Properties:
            ApplicationName:
                Ref: ElasticBS
            Description: AWS ElasticBeanstalk VirtualDesktop Configuration
            OptionSettings:
            -
                Namespace: aws:autoscaling:asg
                OptionName: MinSize
                Value: '1'
            -
                Namespace: aws:elasticbeanstalk:environment
                OptionName: EnvironmentType
                Value: LoadBalanced
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: AWS_ACCESS_KEY_ID
                Value:
                    Ref: AwsAccessKeyId
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: AWS_SECRET_ACCESS_KEY
                Value:
                    Ref: AwsSecretAccessKey
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: BUCKET
                Value:
                    Ref: Bucket
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: THUMB_BUCKET
                Value:
                    Ref: ThumbBucket
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: WINDOWS
                Value:
                    Ref: Windows
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: FILES
                Value:
                    Ref: Files
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: PERMISSIONS
                Value:
                    Ref: Permissions
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: COGNITO_POOL
                Value:
                    Ref: CognitoPool
            -
                Namespace: aws:elasticbeanstalk:application:environment
                OptionName: COGNITO_CLIENT
                Value:
                    Ref: CognitoClient
            SolutionStackName: "64bit Amazon Linux 2018.03 v4.7.1 running Node.js"
    EnvironmentElasticBS:
        Type: AWS::ElasticBeanstalk::Environment
        Properties:
            ApplicationName:
                Ref: ElasticBS
            Description: AWS ElasticBeanstalk VirtualDesktop Environment
            TemplateName:
                Ref: ConfigurationElasticBS
            VersionLabel:
                Ref: ApplicationVersionElasticBS
            OptionSettings:
            -
                Namespace: aws:autoscaling:launchconfiguration 
                OptionName: IamInstanceProfile
                Value: aws-elasticbeanstalk-ec2-role
            -
                Namespace: aws:elasticbeanstalk:container:nodejs
                OptionName: NodeCommand
                Value: "npm start"
    LambdaRole: 
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - 
                    Effect: Allow
                    Principal:
                        Service:
                        - lambda.amazonaws.com
                    Action: sts:AssumeRole
            Path: "/"
    LambdaPermission:
        Type: "AWS::Lambda::Permission"
        Properties: 
            Action: "lambda:InvokeFunction"
            FunctionName:
                Fn::GetAtt:
                - LambdaThumbnail
                - Arn
            Principal: "s3.amazonaws.com"
    LambdaPolicy:
        DependsOn:
        - LambdaRole
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: LambdaRolePolicy
            Roles:
            - Ref: LambdaRole
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                - 
                    Effect: Allow
                    Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Resource:
                    - arn:aws:logs:*:*:*
                - 
                    Effect: Allow
                    Action:
                    - s3:GetObject
                    - s3:PutObject
                    Resource:
                    - arn:aws:s3:::*
                - 
                    Effect: Allow
                    Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                    Resource: '*'
    LambdaThumbnail:
        Type: "AWS::Lambda::Function"
        Properties: 
            Handler: "index.handler"
            Role: 
                Fn::GetAtt: 
                    - "LambdaRole"
                    - "Arn"
            Code:
                S3Bucket:
                    Ref: CodeBucket
                S3Key: "lambda.zip"
            MemorySize: "1024"
            FunctionName: CreatePhotoThumbnail
            Runtime: "nodejs8.10"
            Timeout: "10"
            TracingConfig:
                Mode: "Active"
    Bucket:
        Type: AWS::S3::Bucket
        DependsOn:
            - LambdaThumbnail
            - LambdaPermission
        Properties:
            NotificationConfiguration:
                LambdaConfigurations:
                - 
                    Function:
                        Fn::GetAtt:
                        - LambdaThumbnail
                        - Arn
                    Event: s3:ObjectCreated:*
    ThumbBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Sub
                - thumbs${ResBucket}
                - ResBucket: !Ref Bucket